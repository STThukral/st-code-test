AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  S3CodeBucket:
    Type: String
    Default: 'my-s3-code-bucket-2025'

  MyS3Bucket:
    Type: String
    Default: 'my-s3-bucket-raw'

Resources:
  # Kinesis Data Stream
  MyKinesisStream:
    Type: 'AWS::Kinesis::Stream'
    Properties:
      Name: my-kinesis-stream
      ShardCount: 1  # Number of shards in the stream

  # IAM Role for Kinesis Firehose to access S3
  FirehoseRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'firehose.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'FirehoseToS3Policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:PutObject'
                Resource: 'arn:aws:s3:::my-s3-bucket-raw/*'
              - Effect: 'Allow'
                Action:
                  - 'kinesis:DescribeStream'
                  - 'kinesis:GetRecords'
                  - 'kinesis:GetShardIterator'
                Resource: !GetAtt MyKinesisStream.Arn  # Permissions for Kinesis Stream

  # Lambda Function to Rename Files in S3
  LambdaRenameFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'RenameS3Files'
      Handler: 'index.lambda_handler'
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: 'my-s3-code-bucket-2025'  # Replace with your Lambda code S3 bucket
        S3Key: 'rename-s3-files.zip'  # Replace with your Lambda code ZIP file key
      Runtime: 'python3.8'

  # S3 Bucket to store Lambda code
  MyBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref MyS3Bucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'  # Trigger on object creation
            Function: !GetAtt LambdaRenameFunction.Arn

  
  # Kinesis Firehose Delivery Stream to upload data to S3
  MyFirehoseDeliveryStream:
    Type: 'AWS::KinesisFirehose::DeliveryStream'
    Properties:
      DeliveryStreamType: 'KinesisStreamAsSource'
      KinesisStreamSourceConfiguration:
        KinesisStreamARN: !GetAtt MyKinesisStream.Arn
        RoleARN: !GetAtt FirehoseRole.Arn
      S3DestinationConfiguration:
        RoleARN: !GetAtt FirehoseRole.Arn
        BucketARN: !Sub 'arn:aws:s3:::${MyBucket}'
        Prefix: 'firehose-data/{timestamp}/'  # Prefix that includes timestamp to organize by date
        CompressionFormat: 'UNCOMPRESSED'  # You can change this to GZIP or Snappy
        BufferingHints:
          IntervalInSeconds: 300  # Buffer time before writing data
          SizeInMBs: 5  # Buffer size before writing data

  # Lambda Execution Role
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'S3RenamePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                Resource: 'arn:aws:s3:::my-s3-code-bucket-2025/*'

Outputs:
  S3BucketName:
    Description: 'S3 Bucket Name'
    Value: !Ref MyBucket

  KinesisStreamName:
    Description: 'Kinesis Data Stream Name'
    Value: !Ref MyKinesisStream

  FirehoseDeliveryStreamName:
    Description: 'Kinesis Firehose Delivery Stream Name'
    Value: !Ref MyFirehoseDeliveryStream
